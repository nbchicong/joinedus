/*
 Copyright (c) 2016 CT1905
 Created by Nguyen Ba Chi Cong <nbchicong@gmail.com>
 ---------------------------------------------------
*/
$(function(){UI.UserEntity=function(){var a=this;this.id="user-entity";this.submitType="JSON";this.$toolbar={CREATE:$("#btn-add")};this.url={list:"users/list",create:"users/create",update:"users/update",remove:"users/remove"};this.$listItem=$("#list-items");this.dataSource=new UI.grid.DataSource({columns:[{type:"selection",align:"center",width:30},{property:"name",label:"T\u00ean ng\u01b0\u1eddi d\u00f9ng",sortable:true,type:"text",align:"left"},{property:"email",label:"Email",sortable:true,type:"text",
align:"left",width:250},{property:"role",label:"Quy\u1ec1n h\u1ea1n",sortable:true,type:"select",editData:[{id:"super_admin",name:"Qu\u1ea3n tr\u1ecb t\u1ed1i cao"},{id:"admin",name:"Qu\u1ea3n tr\u1ecb"},{id:"writer",name:"\u0110\u0103ng b\u00e0i"},{id:"user",name:"Ng\u01b0\u1eddi d\u00f9ng"}],valueField:"id",displayField:"name",value:"",width:300},{label:"",type:"action",separate:"&nbsp;",align:"center",buttons:[{text:"S\u1eeda",icon:"fa fa-pencil",labelCls:"label label-info",fn:function(b){a.grid.edit(b[a.getIdProperties()])}},
{text:"X\u00f3a",icon:"fa fa-trash",labelCls:"label label-important",fn:function(b){if(confirm("B\u1ea1n c\u00f3 \u0111\u1ed3ng \u00fd x\u00f3a?")){a.setEntity(b);a.removeRow.call(a,b)}}}]}],delay:100});this.grid=new UI.Grid({id:this.$listItem.prop("id"),url:this.url.list,dataSource:this.dataSource,idProperty:"id",pageSize:10,remotePaging:true});UI.UserEntity.superclass.constructor.call(this);this.$toolbar.CREATE.on("click",function(){a.clear();a.grid.newRecord()});this.grid.on("save",function(b){a.setEntityId(null);
a.setEntity(b);a.save.call(a)});this.grid.on("update",function(b){a.setEntityId(b[a.getIdProperties()]);a.setEntity(b);a.save.call(a)})};BaseUI.extend(UI.UserEntity,UI.Entity,{clear:function(){this.setEntityId(null)},setEntity:function(a){this.entity=a},getEntity:function(){return this.entity},save:function(){var a=this,b=this.getEntity();if(BaseUI.isEmpty(this.getEntityId())){this.setParams(b);this.create(function(c){a.responseHandle(c,function(){a.grid.insert(c);a.grid.commit();a.notify("Create success",
"success");console.log("%cCreate success","color: #00FF00")})})}else{b.id=this.getEntityId();this.setParams(b);this.update(function(c){a.responseHandle(c,function(){a.grid.update(b);a.grid.commit();a.notify("Update success","success");console.log("%cUpdate success","color: #00FF00")})})}},removeRow:function(a){var b=this;this.setEntityId(a[this.getIdProperties()]);this.setParams(this.getEntity());this.remove(function(c){b.responseHandle(c,function(){b.grid.remove(a[b.getIdProperties()])})})}});new UI.UserEntity});